{
    "openapi": "3.0.3",
    "info": {
        "title": "zincobserve",
        "description": "ZincObserve API documents [https://docs.zinc.dev/](https://docs.zinc.dev/)",
        "contact": {
            "name": "ZincObserve",
            "url": "https://zinc.dev/",
            "email": "hello@zinclabs.io"
        },
        "license": {
            "name": "Apache-2.0"
        },
        "version": "0.1.0"
    },
    "paths": {
        "/api/{org_id}/_bulk": {
            "post": {
                "tags": [
                    "Logs"
                ],
                "summary": "Elasticsearch compatible _bulk ingestion API",
                "description": "Elasticsearch compatible _bulk ingestion API",
                "operationId": "LogsIngestionBulk",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Ingest data (ndjson)",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngestionResponse"
                                },
                                "example": {
                                    "code": 200,
                                    "status": [
                                        {
                                            "failed": 0,
                                            "name": "olympics",
                                            "successful": 3
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/_search": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search using SQL against a stream data",
                "description": "Search using SQL against a stream data",
                "operationId": "SearchSQL",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Search query",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchRequest"
                            },
                            "example": {
                                "aggs": {
                                    "histogram": "select histogram(_timestamp, '30 second') AS key, count(*) AS num from query GROUP BY key ORDER BY key"
                                },
                                "query": {
                                    "end_time": 1675185660872049,
                                    "from": 0,
                                    "size": 10,
                                    "sql": "select * from k8s ",
                                    "start_time": 1675182660872049
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "aggs": {
                                        "agg1": [
                                            {
                                                "key": "2023-01-15 14:00:00",
                                                "num": 345940
                                            },
                                            {
                                                "key": "2023-01-15 19:00:00",
                                                "num": 384026
                                            }
                                        ]
                                    },
                                    "from": 0,
                                    "hits": [
                                        {
                                            "_p": "F",
                                            "_timestamp": 1674213225158000,
                                            "kubernetes": {
                                                "container_hash": "dkr.ecr.us-west-2.amazonaws.com/zincobserve@sha256:3dbbb0dc1eab2d5a3b3e4a75fd87d194e8095c92d7b2b62e7cdbd07020f54589",
                                                "container_image": "dkr.ecr.us-west-2.amazonaws.com/zincobserve:v0.0.3",
                                                "container_name": "zincobserve",
                                                "docker_id": "eb0983bdb9ff9360d227e6a0b268fe3b24a0868c2c2d725a1516c11e88bf5789",
                                                "host": "ip.us-east-2.compute.internal",
                                                "namespace_name": "zincobserve",
                                                "pod_id": "35a0421f-9203-4d73-9663-9ff0ce26d409",
                                                "pod_name": "zincobserve-ingester-0"
                                            },
                                            "log": "[2023-01-20T11:13:45Z INFO  actix_web::middleware::logger] 10.2.80.192 \"POST /api/demo/_bulk HTTP/1.1\" 200 68",
                                            "stream": "stderr"
                                        }
                                    ],
                                    "scan_size": 28943,
                                    "size": 1,
                                    "took": 155,
                                    "total": 27179431
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/alerts": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "List all alerts for an organization",
                "description": "List all alerts for an organization",
                "operationId": "ListAlerts",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlertList"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/alerts/destinations": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "List all destinations for an organization",
                "description": "List all destinations for an organization",
                "operationId": "ListDestinations",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AlertDestinationResponse"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/alerts/destinations/{destination_name}": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Get alert destination by destination name",
                "description": "Get alert destination by destination name",
                "operationId": "GetDestination",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "destination_name",
                        "in": "path",
                        "description": "Destination name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlertDestinationResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Create new alert destination for an organization",
                "description": "Create new alert destination for an organization",
                "operationId": "CreateDestination",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "destination_name",
                        "in": "path",
                        "description": "Destination name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Delete alert destination by alert destination name",
                "description": "Delete alert destination by alert destination name",
                "operationId": "DeleteAlertDestination",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "destination_name",
                        "in": "path",
                        "description": "Destination name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/alerts/templates": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "List all templates for an organization",
                "description": "List all templates for an organization",
                "operationId": "ListTemplates",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DestinationTemplate"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/alerts/templates/{template_name}": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Get alert template by template name",
                "description": "Get alert template by template name",
                "operationId": "GetTemplate",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "template_name",
                        "in": "path",
                        "description": "Template name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DestinationTemplate"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Create new alert templates for an organization",
                "description": "Create new alert templates for an organization",
                "operationId": "CreateTemplate",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "template_name",
                        "in": "path",
                        "description": "Template name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Delete alert template by alert template name",
                "description": "Delete alert template by alert template name",
                "operationId": "DeleteAlertTemplate",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "template_name",
                        "in": "path",
                        "description": "Template name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/functions": {
            "get": {
                "tags": [
                    "Functions"
                ],
                "summary": "List all functions for an organization",
                "description": "List all functions for an organization",
                "operationId": "FunctionList",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FunctionList"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/functions/{name}": {
            "post": {
                "tags": [
                    "Functions"
                ],
                "operationId": "FunctionSave",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Function name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Function data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Transform"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Functions"
                ],
                "summary": "Delete a query function by name",
                "description": "Delete a query function by name",
                "operationId": "FunctionDelete",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Function name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/kv": {
            "get": {
                "tags": [
                    "KV"
                ],
                "summary": "list KV keys with prefix",
                "description": "list KV keys with prefix",
                "operationId": "ListKVKeys",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "prefix",
                        "in": "query",
                        "description": "Key prefix",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/kv/{key}": {
            "get": {
                "tags": [
                    "KV"
                ],
                "summary": "Get KV value",
                "description": "Get KV value",
                "operationId": "GetKVValue",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Key name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "KV"
                ],
                "summary": "Set KV value",
                "description": "Set KV value",
                "operationId": "SetKVValue",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Key name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Value of the key",
                    "content": {
                        "text/plain": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "KV"
                ],
                "summary": "Remove a KV value",
                "description": "Remove a KV value",
                "operationId": "RemoveKVValue",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Key name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/organizations": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get user organizations",
                "description": "Get user organizations",
                "operationId": "GetUserOrganizations",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/organizations/passcode": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get organization ingest token for current user",
                "description": "Get organization ingest token for current user",
                "operationId": "GetOrganizationUserIngestToken",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PasscodeResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Update organization ingest token for current user",
                "description": "Update organization ingest token for current user",
                "operationId": "UpdateOrganizationUserIngestToken",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PasscodeResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/streams": {
            "get": {
                "tags": [
                    "Streams"
                ],
                "summary": "List all streams of an organization",
                "description": "List all streams of an organization",
                "operationId": "StreamList",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListStream"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/summary": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get organization summary",
                "description": "Get organization summary",
                "operationId": "GetOrganizationSummary",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrgSummary"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "List all users of an organization",
                "description": "List all users of an organization",
                "operationId": "UserList",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserList"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create new user for an organization",
                "description": "Create new user for an organization",
                "operationId": "UserSave",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/users/{email_id}": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Add existing user to an organization",
                "description": "Add existing user to an organization",
                "operationId": "AddUserToOrg",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email_id",
                        "in": "path",
                        "description": "User's email id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User role",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserOrgRole"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update existing user belonging to an organization",
                "description": "Update existing user belonging to an organization",
                "operationId": "UserUpdate",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email_id",
                        "in": "path",
                        "description": "User's email id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUser"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Remove a user from an organization",
                "description": "Remove a user from an organization",
                "operationId": "RemoveUserFromOrg",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email_id",
                        "in": "path",
                        "description": "User name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}": {
            "delete": {
                "tags": [
                    "Streams"
                ],
                "summary": "Delete stream by stream name",
                "description": "Delete stream by stream name",
                "operationId": "StreamDelete",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}/_around": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Search around a particular record for contextual result set",
                "description": "Search around a particular record for contextual result set",
                "operationId": "SearchAround",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "stream_name name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "around key",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "around size",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "from": 0,
                                    "hits": [
                                        {
                                            "_p": "F",
                                            "_timestamp": 1674213225158000,
                                            "kubernetes": {
                                                "container_hash": "dkr.ecr.us-west-2.amazonaws.com/zincobserve@sha256:3dbbb0dc1eab2d5a3b3e4a75fd87d194e8095c92d7b2b62e7cdbd07020f54589",
                                                "container_image": "dkr.ecr.us-west-2.amazonaws.com/zincobserve:v0.0.3",
                                                "container_name": "zincobserve",
                                                "docker_id": "eb0983bdb9ff9360d227e6a0b268fe3b24a0868c2c2d725a1516c11e88bf5789",
                                                "host": "ip.us-east-2.compute.internal",
                                                "namespace_name": "zincobserve",
                                                "pod_id": "35a0421f-9203-4d73-9663-9ff0ce26d409",
                                                "pod_name": "zincobserve-ingester-0"
                                            },
                                            "log": "[2023-01-20T11:13:45Z INFO  actix_web::middleware::logger] 10.2.80.192 \"POST /api/demo/_bulk HTTP/1.1\" 200 68",
                                            "stream": "stderr"
                                        }
                                    ],
                                    "scan_size": 28943,
                                    "size": 10,
                                    "took": 155,
                                    "total": 10
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}/_json": {
            "post": {
                "tags": [
                    "Logs"
                ],
                "summary": "json ingestion API, accepts array of json records",
                "description": "json ingestion API, accepts array of json records",
                "operationId": "LogsIngestionJson",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Ingest data (json array)",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            },
                            "example": [
                                {
                                    "Athlete": "Alfred",
                                    "City": "Athens",
                                    "Country": "HUN",
                                    "Discipline": "Swimming",
                                    "Sport": "Aquatics",
                                    "Year": 1896
                                },
                                {
                                    "Athlete": "HERSCHMANN",
                                    "City": "Athens",
                                    "Country": "CHN",
                                    "Discipline": "Swimming",
                                    "Sport": "Aquatics",
                                    "Year": 1896
                                }
                            ]
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngestionResponse"
                                },
                                "example": {
                                    "code": 200,
                                    "status": [
                                        {
                                            "failed": 0,
                                            "name": "olympics",
                                            "successful": 3
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}/_multi": {
            "post": {
                "tags": [
                    "Logs"
                ],
                "summary": "ndjson (newline delimited json) multi ingestion API",
                "description": "ndjson (newline delimited json) multi ingestion API",
                "operationId": "LogsIngestionMulti",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Ingest data (multiple line json)",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngestionResponse"
                                },
                                "example": {
                                    "code": 200,
                                    "status": [
                                        {
                                            "failed": 0,
                                            "name": "olympics",
                                            "successful": 3
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}/alerts": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "List all alerts for a specified stream of an organization",
                "description": "List all alerts for a specified stream of an organization",
                "operationId": "ListStreamAlerts",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlertList"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}/alerts/{alert_name}": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Get alert by alert name",
                "description": "Get alert by alert name",
                "operationId": "GetAlert",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "alert_name",
                        "in": "path",
                        "description": "Alert name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alert"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Create new alert for specified stream of an organization",
                "description": "Create new alert for specified stream of an organization",
                "operationId": "SaveAlert",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "alert_name",
                        "in": "path",
                        "description": "Alert name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Delete alert by alert name",
                "description": "Delete alert by alert name",
                "operationId": "DeleteAlert",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "alert_name",
                        "in": "path",
                        "description": "Alert name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}/functions": {
            "get": {
                "tags": [
                    "Functions"
                ],
                "summary": "List all ingest time functions for a stream of an organization",
                "description": "List all ingest time functions for a stream of an organization",
                "operationId": "FunctionListForStream",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FunctionList"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}/functions/{name}": {
            "post": {
                "tags": [
                    "Functions"
                ],
                "summary": "Create new ingest time function for a stream of an organization",
                "description": "Create new ingest time function for a stream of an organization",
                "operationId": "FunctionSaveForStream",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Function name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Function data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Transform"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Functions"
                ],
                "summary": "Delete ingest time function by name for a stream",
                "description": "Delete ingest time function by name for a stream",
                "operationId": "FunctionDeleteForStream",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Function name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}/schema": {
            "get": {
                "tags": [
                    "Streams"
                ],
                "summary": "Get schema of stream by stream name",
                "description": "Get schema of stream by stream name",
                "operationId": "StreamSchema",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Stream"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}/settings": {
            "post": {
                "tags": [
                    "Streams"
                ],
                "summary": "Update stream settings",
                "description": "Update stream settings",
                "operationId": "StreamSettings",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Stream settings",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StreamSettings"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate a user",
                "description": "Authenticate a user",
                "operationId": "UserLoginCheck",
                "requestBody": {
                    "description": "User login",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignInUser"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SignInResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        }
    },
    "components": {
        "schemas": {
            "Alert": {
                "type": "object",
                "required": [
                    "condition",
                    "duration",
                    "frequency",
                    "time_between_alerts",
                    "destination"
                ],
                "properties": {
                    "condition": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "context_attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "destination": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "frequency": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "is_real_time": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "query": {
                        "$ref": "#/components/schemas/SearchQuery"
                    },
                    "stream": {
                        "type": "string"
                    },
                    "time_between_alerts": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "AlertDestType": {
                "type": "string",
                "enum": [
                    "slack",
                    "alertmanager"
                ]
            },
            "AlertDestination": {
                "type": "object",
                "required": [
                    "url",
                    "method",
                    "template"
                ],
                "properties": {
                    "headers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "method": {
                        "$ref": "#/components/schemas/AlertHTTPType"
                    },
                    "name": {
                        "type": "string"
                    },
                    "template": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                }
            },
            "AlertDestinationResponse": {
                "type": "object",
                "required": [
                    "name",
                    "url",
                    "method"
                ],
                "properties": {
                    "headers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "method": {
                        "$ref": "#/components/schemas/AlertHTTPType"
                    },
                    "name": {
                        "type": "string"
                    },
                    "template": {
                        "$ref": "#/components/schemas/DestinationTemplate"
                    },
                    "url": {
                        "type": "string"
                    }
                }
            },
            "AlertHTTPType": {
                "type": "string",
                "enum": [
                    "post",
                    "put",
                    "get"
                ]
            },
            "AlertList": {
                "type": "object",
                "required": [
                    "list"
                ],
                "properties": {
                    "list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Alert"
                        }
                    }
                }
            },
            "AllOperator": {
                "type": "string",
                "enum": [
                    "EqualTo",
                    "NotEqualTo",
                    "GreaterThan",
                    "GreaterThanEquals",
                    "LessThan",
                    "LessThanEquals",
                    "Contains",
                    "NotContains"
                ]
            },
            "Condition": {
                "type": "object",
                "required": [
                    "column",
                    "operator",
                    "value"
                ],
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "ignoreCase": {
                        "type": "boolean"
                    },
                    "isNumeric": {
                        "type": "boolean"
                    },
                    "operator": {
                        "$ref": "#/components/schemas/AllOperator"
                    },
                    "value": {
                        "type": "object"
                    }
                }
            },
            "DestinationTemplate": {
                "type": "object",
                "required": [
                    "body"
                ],
                "properties": {
                    "body": {
                        "type": "object"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "FunctionList": {
                "type": "object",
                "required": [
                    "list"
                ],
                "properties": {
                    "list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transform"
                        }
                    }
                }
            },
            "HttpResponse": {
                "type": "object",
                "description": "HTTP response\ncode 200 is success\ncode 400 is error\ncode 404 is not found\ncode 500 is internal server error\ncode 503 is service unavailable\ncode >= 1000 is custom error code\nmessage is the message or error message",
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "IngestionPasscode": {
                "type": "object",
                "required": [
                    "passcode",
                    "user"
                ],
                "properties": {
                    "passcode": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    }
                }
            },
            "IngestionResponse": {
                "type": "object",
                "required": [
                    "code",
                    "status"
                ],
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "error": {
                        "type": "string"
                    },
                    "status": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StreamStatus"
                        }
                    }
                }
            },
            "ListStream": {
                "type": "object",
                "required": [
                    "list"
                ],
                "properties": {
                    "list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Stream"
                        }
                    }
                }
            },
            "OrgDetails": {
                "type": "object",
                "required": [
                    "id",
                    "identifier",
                    "name",
                    "user_email",
                    "ingest_threshold",
                    "search_threshold",
                    "type",
                    "UserObj"
                ],
                "properties": {
                    "UserObj": {
                        "$ref": "#/components/schemas/OrgUser"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "ingest_threshold": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "search_threshold": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "type": {
                        "type": "string"
                    },
                    "user_email": {
                        "type": "string"
                    }
                }
            },
            "OrgSummary": {
                "type": "object",
                "required": [
                    "streams",
                    "functions",
                    "alerts"
                ],
                "properties": {
                    "alerts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Alert"
                        }
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transform"
                        }
                    },
                    "streams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Stream"
                        }
                    }
                }
            },
            "OrgUser": {
                "type": "object",
                "required": [
                    "first_name",
                    "last_name",
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    }
                }
            },
            "OrganizationResponse": {
                "type": "object",
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrgDetails"
                        }
                    }
                }
            },
            "PasscodeResponse": {
                "type": "object",
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/IngestionPasscode"
                    }
                }
            },
            "RecordStatus": {
                "type": "object",
                "required": [
                    "successful",
                    "failed"
                ],
                "properties": {
                    "error": {
                        "type": "string"
                    },
                    "failed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "successful": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "RequestEncoding": {
                "type": "string",
                "enum": [
                    "base64",
                    "Empty"
                ]
            },
            "SearchQuery": {
                "type": "object",
                "required": [
                    "sql"
                ],
                "properties": {
                    "end_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "sql": {
                        "type": "string"
                    },
                    "sql_mode": {
                        "type": "string"
                    },
                    "start_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "track_total_hits": {
                        "type": "boolean"
                    }
                }
            },
            "SearchRequest": {
                "type": "object",
                "required": [
                    "query"
                ],
                "properties": {
                    "aggs": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "encoding": {
                        "$ref": "#/components/schemas/RequestEncoding"
                    },
                    "query": {
                        "$ref": "#/components/schemas/SearchQuery"
                    }
                }
            },
            "SearchResponse": {
                "type": "object",
                "required": [
                    "took",
                    "hits",
                    "aggs",
                    "total",
                    "from",
                    "size",
                    "scan_size"
                ],
                "properties": {
                    "aggs": {
                        "type": "object"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "hits": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "scan_size": {
                        "type": "integer"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "took": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                }
            },
            "SignInResponse": {
                "type": "object",
                "required": [
                    "status",
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "type": "boolean"
                    }
                }
            },
            "SignInUser": {
                "type": "object",
                "required": [
                    "name",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "Stream": {
                "type": "object",
                "required": [
                    "name",
                    "storage_type",
                    "stream_type",
                    "stats",
                    "schema",
                    "settings"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "schema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StreamProperty"
                        }
                    },
                    "settings": {
                        "$ref": "#/components/schemas/StreamSettings"
                    },
                    "stats": {
                        "$ref": "#/components/schemas/StreamStats"
                    },
                    "storage_type": {
                        "type": "string"
                    },
                    "stream_type": {
                        "$ref": "#/components/schemas/StreamType"
                    }
                }
            },
            "StreamProperty": {
                "type": "object",
                "required": [
                    "name",
                    "type"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "StreamSettings": {
                "type": "object",
                "properties": {
                    "full_text_search_keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "partition_keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "StreamStats": {
                "type": "object",
                "required": [
                    "doc_time_min",
                    "doc_time_max",
                    "doc_num",
                    "file_num",
                    "storage_size",
                    "compressed_size"
                ],
                "properties": {
                    "compressed_size": {
                        "type": "number",
                        "format": "float"
                    },
                    "doc_num": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "doc_time_max": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "doc_time_min": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "file_num": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "storage_size": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "StreamStatus": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RecordStatus"
                    },
                    {
                        "type": "object",
                        "required": [
                            "name"
                        ],
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "StreamType": {
                "type": "string",
                "enum": [
                    "logs",
                    "metrics",
                    "traces",
                    "metadata",
                    "file_list"
                ]
            },
            "Transform": {
                "type": "object",
                "required": [
                    "function"
                ],
                "properties": {
                    "function": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "num_args": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "order": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "stream_name": {
                        "type": "string"
                    },
                    "trans_type": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "UpdateUser": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "new_password": {
                        "type": "string"
                    },
                    "old_password": {
                        "type": "string"
                    },
                    "role": {
                        "$ref": "#/components/schemas/UserRole"
                    },
                    "token": {
                        "type": "string"
                    }
                }
            },
            "UserList": {
                "type": "object",
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserResponse"
                        }
                    }
                }
            },
            "UserOrgRole": {
                "type": "object",
                "required": [
                    "role"
                ],
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/UserRole"
                    }
                }
            },
            "UserRequest": {
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "UserResponse": {
                "type": "object",
                "required": [
                    "email",
                    "role"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "role": {
                        "$ref": "#/components/schemas/UserRole"
                    }
                }
            },
            "UserRole": {
                "type": "string",
                "enum": [
                    "admin",
                    "member",
                    "root"
                ]
            }
        },
        "securitySchemes": {
            "Authorization": {
                "type": "http",
                "scheme": "basic"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "User login authentication"
        },
        {
            "name": "Logs",
            "description": "Logs data ingestion operations"
        },
        {
            "name": "Search",
            "description": "Search/Query operations"
        },
        {
            "name": "Alerts",
            "description": "Alerts retrieval & management operations"
        },
        {
            "name": "Functions",
            "description": "Functions retrieval & management operations"
        },
        {
            "name": "Organizations",
            "description": "Organizations retrieval & management operations"
        },
        {
            "name": "Streams",
            "description": "Stream retrieval & management operations"
        },
        {
            "name": "Users",
            "description": "Users retrieval & management operations"
        },
        {
            "name": "KV",
            "description": "Key Value retrieval & management operations"
        }
    ]
}